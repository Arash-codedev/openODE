####################################################
#  Warning: Autogenerated and subjected to change  #
#  Wed Mar 21 2014 10:49:03 GMT+1100 (AEDT)        #
#  Path: ./CMakeLists.txt                          #
#  Generator mark: G5416829841                     #
####################################################

cmake_minimum_required(VERSION 2.8.9)

project(chaos_lorenz)

find_package(Threads)

include_directories(.)

# Detect operating system
if(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    add_definitions(-DSYSTEM_LINUX)
endif()
if(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD")
    add_definitions(-DSYSTEM_FREEBSD)
endif()
if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
    add_definitions(-DSYSTEM_WINDOWS)
endif()

# Libraries
set(Boost_USE_STATIC_LIBS OFF) 
set(Boost_USE_MULTITHREADED ON)  
set(Boost_USE_STATIC_RUNTIME OFF) 
set(BOOST_VERSION "1.65.0")
find_package(Boost ${BOOST_VERSION} COMPONENTS filesystem regex system thread date_time wave) 
find_package(OpenGL)
find_package(GLUT)
find_package(SDL2)

if(NOT Boost_FOUND)
	message(FATAL_ERROR "Boost ${BOOST_VERSION} not found." )
endif()

include_directories(SYSTEM ${Boost_INCLUDE_DIR})

# Flags
set(CMAKE_CXX_FLAGS         "${CMAKE_CXX_FLAGS} -std=c++17 -Wall -Wconversion -Wfatal-errors -Wextra")
set(CMAKE_CXX_FLAGS_DEBUG   "-Og -g3")
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")

include_directories(${Boost_INCLUDE_DIRS}) 
include_directories(${OPENGL_INCLUDE_DIRS})
include_directories(${GLUT_INCLUDE_DIRS})
include_directories(${SDL2_INCLUDE_DIRS})

add_executable(chaos_lorenz
	main.cpp
	auto-coded/types/position.cpp
	hand-coded/systems/lorenzsys/plant_model.cpp
	auto-coded/systems/lorenzsys/manager.cpp
	auto-coded/systems/lorenzsys/solver.cpp
	# transferred libraries
	auto-coded/libs/graphics/chaosgraph.cpp
	auto-coded/libs/graphics/easygraph.cpp
	auto-coded/libs/graphics/video_writer.cpp
)

# Link
target_link_libraries(chaos_lorenz ${Boost_LIBRARIES})
target_link_libraries(chaos_lorenz ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(chaos_lorenz stdc++fs)
target_link_libraries(chaos_lorenz ${OPENGL_LIBRARIES})
target_link_libraries(chaos_lorenz ${GLUT_LIBRARY})
target_link_libraries(chaos_lorenz ${SDL2_LIBRARIES})
target_link_libraries(chaos_lorenz avdevice)
target_link_libraries(chaos_lorenz avfilter)
target_link_libraries(chaos_lorenz avformat)
target_link_libraries(chaos_lorenz avcodec)
target_link_libraries(chaos_lorenz rt)
target_link_libraries(chaos_lorenz dl)
target_link_libraries(chaos_lorenz Xfixes)
target_link_libraries(chaos_lorenz Xext)
target_link_libraries(chaos_lorenz X11)
target_link_libraries(chaos_lorenz asound)
target_link_libraries(chaos_lorenz z)
target_link_libraries(chaos_lorenz swresample)
target_link_libraries(chaos_lorenz swscale)
target_link_libraries(chaos_lorenz avutil)
target_link_libraries(chaos_lorenz m)
target_link_libraries(chaos_lorenz lzma)
target_link_libraries(chaos_lorenz bz2)
target_link_libraries(chaos_lorenz pthread)
