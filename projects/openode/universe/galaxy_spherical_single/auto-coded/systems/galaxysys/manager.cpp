/****************************************************/
/* Warning: Autogenerated and subjected to change   */
/* Thu Oct 18 2014 22:29:14 GMT+1100 (AEDT)         */
/* Path: ./auto-coded/systems/galaxysys/manager.cpp */
/* Generator mark: G7692348073                      */
/****************************************************/
#include <auto-coded/systems/galaxysys/manager.hpp>
#include <auto-coded/systems/galaxysys/solver.hpp>
#include <auto-coded/systems/galaxysys/plant_model.hpp>
#include <iostream>
#include <stdexcept>

using std::cout;
using std::endl;
using std::runtime_error;
using std::exception;

GalaxySys_manager::GalaxySys_manager():
			simulation_continue(true),
			observed_t(0.0)
{
}

size_t GalaxySys_manager::integrate()
{
	double t_start=0.0;
	double t_stop=3*60.0;
	double dt=1.0/30.0;
	GalaxySys_plant_manual_inits(*this);
	Galaxy plant_state;
	plant_state.reset();
	plant_output.reset();
	GalaxySys_plant_init_states(t_start,plant_state);
	GalaxySys_solver solver(*this);
	size_t integrate_result=0;
	try
	{
		integrate_result=solver.integrate(plant_state,t_start,t_stop,dt);
	}
	catch(const exception& e)
	{
		cout<<e.what()<<endl;
	}
	catch(...)
	{
		cout<<"Unknown error: A355650851"<<endl;
	}
	GalaxySys_plant_manual_finalize(*this);
	return integrate_result;
}

void GalaxySys_manager::plant_rhs(
	const Galaxy &state,
	Galaxy &state_dot,
	const double t)
{
	GalaxySys_plant_rhs(state,state_dot,t,observed_t);
}

void GalaxySys_manager::plant_observer(
		const Galaxy &state,
		const double t,
		const double /*dt*/)
{
	GalaxySys_plant_observer(simulation_continue,state,t,observed_t,plant_output);
	observed_t=t;
}

